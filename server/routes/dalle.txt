import express from 'express';
import * as dotenv from 'dotenv';
import fetch from 'node-fetch'; // Import the 'fetch' function

dotenv.config();

const router = express.Router();

router.route('/').get((req, res) => {
  res.status(200).json({ message: 'Hello from DALL-E!' });
});

router.route('/').post(async (req, res) => {
  try {
    const { prompt } = req.body;
    // Call the Hugging Face API with the provided prompt data
    const response = await fetch(
      "https://api-inference.huggingface.co/models/runwayml/stable-diffusion-v1-5",
      {
        headers: { Authorization: "Bearer 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" },
        method: "POST",
        body: JSON.stringify({ inputs: { prompt } }), // Ensure to send the prompt data properly
      }
    );

    if (!response.ok) {
      // Handle non-200 status code responses
      const errorMessage = await response.text();
      throw new Error(`Hugging Face API request failed with status ${response.status}: ${errorMessage}`);
    }

    // Parse the response as JSON
    const data = await response.json();

    // Assuming the API response has a property 'image' that contains the base64 encoded image
    const image = data?.image;

    if (!image) {
      throw new Error('Hugging Face API response did not contain the expected image data');
    }

    res.status(200).json({ photo: image });
  } catch (error) {
    console.error(error);
    res.status(500).send(error.message || 'Something went wrong');
  }
  
});

export default router;
